<%- include('../partials/user/header') %> 

<div class="container mt-10 mb-10">
    <form id="addressForm" method="post" action="/add-address/?id=<%= user._id %>">
        <div class="row">
            <div class="form-group col-md-6 mb-3">
                <label>Address Type <span class="required">*</span></label>
                <input class="form-control square" name="addressType" type="text" placeholder="Home, Work, etc.">
                <div id="addressTypeError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>Name <span class="required">*</span></label>
                <input class="form-control square" name="name" type="text" placeholder="Name">
                <div id="nameError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>City <span class="required">*</span></label>
                <input class="form-control square" name="city" type="text" placeholder="City">
                <div id="cityError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>Landmark <span class="required">*</span></label>
                <input class="form-control square" name="landMark" type="text" placeholder="Landmark">
                <div id="landMarkError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>State <span class="required">*</span></label>
                <input class="form-control square" name="state" type="text" placeholder="State">
                <div id="stateError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>Pincode <span class="required">*</span></label>
                <input class="form-control square" name="pincode" type="number" placeholder="Pincode">
                <div id="pincodeError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>Phone <span class="required">*</span></label>
                <input class="form-control square" name="phone" type="text" placeholder="Primary Phone">
                <div id="phoneError" class="text-danger"></div>
            </div>
            <div class="form-group col-md-6 mb-3">
                <label>Alternate Phone</label>
                <input class="form-control square" name="altPhone" type="text" placeholder="Alternate Phone (optional)">
                <div id="altPhoneError" class="text-danger"></div>
            </div>
            <div class="col-md-12 text-center mt-4">
                <button type="submit" class="btn btn-fill-out submit-button" name="submitbutton" value="Submit">Save Address</button>
            </div>
        </div>
    </form>
</div>

<script>
    function validateAddressForm(formData) {
        const validators = {
            addressType: {
                validate: (value) => /^[A-Za-z0-9\s]{4,50}$/.test(value.trim()),
                errorMessage: "Address type must be 4-50 characters."
            },
            name: {
                validate: (value) => /^[A-Za-z\s]{4,50}$/.test(value.trim()),
                errorMessage: "Name must be 4-50 characters (letters only)."
            },
            city: {
                validate: (value) => /^[A-Za-z\s]{4,50}$/.test(value.trim()),
                errorMessage: "City must be 4-50 characters (letters only)."
            },
            landMark: {
                validate: (value) => /^[A-Za-z0-9\s]{4,100}$/.test(value.trim()),
                errorMessage: "Landmark must be 4-100 characters."
            },
            state: {
                validate: (value) => /^[A-Za-z\s]{4,50}$/.test(value.trim()),
                errorMessage: "State must be 4-50 characters (letters only)."
            },
            pincode: {
                validate: (value) => /^[1-9][0-9]{5}$/.test(value),
                errorMessage: "Pincode must be a valid 6-digit number."
            },
            phone: {
                validate: (value) => /^[6-9]\d{9}$/.test(value),
                errorMessage: "Phone must be a valid 10-digit number."
            },
            altPhone: {
                validate: (value) => !value || /^[6-9]\d{9}$/.test(value),
                errorMessage: "Alternate phone must be a valid 10-digit number."
            }
        };

        let isValid = true;
        const errors = {};

        for (const field in validators) {
            const value = formData[field]?.trim() || "";
            const { validate, errorMessage } = validators[field];

            if (!validate(value)) {
                isValid = false;
                errors[field] = errorMessage;
            }
        }

        if (formData.phone === formData.altPhone) {
            isValid = false;
            errors.altPhone = "Alternate phone cannot be the same as primary phone.";
        }

        displayErrors(errors);
        return isValid;
    }

    function displayErrors(errors) {
        Object.keys(errors).forEach((field) => {
            const errorElement = document.getElementById(`${field}Error`);
            if (errorElement) {
                errorElement.textContent = errors[field];
            }
        });

        document.querySelectorAll('.text-danger').forEach((element) => {
            const fieldName = element.id.replace('Error', '');
            if (!errors[fieldName]) {
                element.textContent = '';
            }
        });
    }

    function handleSubmit(event) {
        event.preventDefault();
        const formData = Object.fromEntries(new FormData(event.target));

        if (validateAddressForm(formData)) {
            event.target.submit();
        }
    }

    document.getElementById("addressForm").addEventListener("submit", handleSubmit);
</script>

<%- include('../partials/user/footer') %>
