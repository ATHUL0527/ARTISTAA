<%- include("../../views/partials/admin/header") %>

<head>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" />
  <link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet">
  <style>
    body {
      background-color: #f4f7fa;
    }

    .card-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 20px;
      padding: 20px;
    }

    .coupon-card {
      position: relative;
      background: linear-gradient(135deg, #ffffff 0%, #f5f7fa 100%);
      border-radius: 15px;
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      transition: all 0.3s ease;
      border: 1px solid #e1e6eb;
    }

    .coupon-card:hover {
      transform: translateY(-10px);
      box-shadow: 0 15px 35px rgba(0, 0, 0, 0.15);
    }

    .coupon-header {
      background: linear-gradient(45deg, #2f3133, #28da90);
      color: white;
      padding: 15px;
      text-align: center;
      position: relative;
    }

    .coupon-code {
      font-size: 1.8em;
      font-weight: 700;
      letter-spacing: 2px;
      margin-bottom: 10px;
    }

    .coupon-details {
      padding: 20px;
      background: white;
    }

    .coupon-details div {
      display: flex;
      justify-content: space-between;
      margin-bottom: 10px;
      color: #495057;
      border-bottom: 1px solid #e9ecef;
      padding-bottom: 8px;
    }

    .coupon-details div:last-child {
      border-bottom: none;
    }

    .coupon-details strong {
      color: #343a40;
      font-weight: 600;
    }

    .expired {
      opacity: 0.6;
      background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);
    }

    .expired .coupon-header {
      background: linear-gradient(45deg, #111111, #727272);
    }

    .expired .coupon-code {
      text-decoration: line-through;
    }

    .coupon-actions {
      display: flex;
      justify-content: space-between;
      padding: 10px;
      background-color: #f8f9fa;
    }

    .btn-delete {
      background-color: #000000;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 5px;
      display: flex;
      align-items: center;
      gap: 5px;
      transition: background-color 0.3s ease;
    }

    .btn-delete:hover {
      background-color: #c82333;
    }

    .status-badge {
      position: absolute;
      top: 10px;
      right: 10px;
      padding: 5px 10px;
      border-radius: 20px;
      font-size: 0.8em;
      font-weight: bold;
    }

    .status-listed {
      background-color: #28a745;
      color: white;
    }

    .status-unlisted {
      background-color: #6c757d;
      color: white;
    }
    .error-message{
      color: #ff0019;
    }
  </style>
</head>

<body>
  <section class="content-main">
    <div class="content-header d-flex justify-content-between align-items-center p-4">
      <h2 class="content-title">Coupon Management</h2>
      <button
        type="button"
        class="btn btn-primary d-flex align-items-center gap-2"
        data-bs-toggle="modal"
        data-bs-target="#addCouponModal"
      >
        <i class="ri-add-line"></i> Add Coupon
      </button>
    </div>
    <div
    class="modal fade"
    id="addCouponModal"
    tabindex="-1"
    aria-labelledby="addCouponModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addCouponModalLabel">Add New Coupon</h5>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <form
            id="add-coupon-form"
            onsubmit="return handleCouponFormSubmit(event)"
          >
            <div class="mb-3">
              <label for="code" class="form-label">Coupon Code</label>
              <input type="text" id="code" name="code" class="form-control" />
              <span id="code-error" class="error-message"></span>
            </div>
            <div class="mb-3">
              <label for="start-date" class="form-label">Start Date</label>
              <input
                type="date"
                id="start-date"
                name="createdOn"
                class="form-control"
              />
              <span id="start-date-error" class="error-message"></span>
            </div>
            <div class="mb-3">
              <label for="expire-date" class="form-label">Expire Date</label>
              <input
                type="date"
                id="expire-date"
                name="expireOn"
                class="form-control"
              />
              <span id="expire-date-error" class="error-message"></span>
            </div>
            <div class="mb-3">
              <label for="offer-price" class="form-label"
                >Offer Percentage</label
              >
              <input
                type="number"
                id="offer-percentage"
                name="offerPercentage"
                class="form-control"
              />
              <span id="offer-percentage-error" class="error-message"></span>
            </div>
            <div class="mb-3">
              <label for="minimum-price" class="form-label"
                >Minimum Price</label
              >
              <input
                type="number"
                id="minimum-price"
                name="minimumPrice"
                class="form-control"
              />
              <span id="minimum-price-error" class="error-message"></span>
            </div>
            <button type="submit" class="btn btn-primary w-100">
              Create Coupon
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
    <div class="card-container">
      <% coupons.forEach((coupon, index) => { 
        const isExpired = new Date(coupon.expireOn) < new Date();
        const status = coupon.isList ? 'Listed' : 'Unlisted';
      %>
      <div class="coupon-card <%= isExpired ? 'expired' : '' %>">
        <div class="coupon-header">
          <div class="coupon-code"><%= coupon.code %></div>
         
        </div>
        <div class="coupon-details">
          <div>
            <strong>Start Date</strong>
            <%= new Date(coupon.createdOn).toLocaleDateString() %>
          </div>
          <div>
            <strong>Expire Date</strong>
            <%= new Date(coupon.expireOn).toLocaleDateString() %>
          </div>
          <div>
            <strong>Offer Percentage</strong>
            <%= coupon.offerPercentage %>%
          </div>
          <div>
            <strong>Minimum Price</strong>
            â‚¹<%= coupon.minimumPrice %>
          </div>
        </div>
        <div class="coupon-actions">
          <button 
            class="btn-delete" 
            onclick="deleteCoupon('<%= coupon._id %>')"
          >
            <i class="ri-delete-bin-line"></i> Delete
          </button>
        </div>
      </div>
      <% }) %>
    </div>
  </section>

  <div class="pagination-area my-4">
    <nav>
      <ul class="pagination justify-content-center">
        <% for(let i=1;i<=totalPages;i++){ %>
        <li class="page-item <%= (i===currentPage) ? 'active' : '' %>">
          <a class="page-link" style="z-index: 100" href="?page=<%= i %>">
            <%= i %>
          </a>
        </li>
        <% } %>
      </ul>
    </nav>
  </div>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    function deleteCoupon(couponId) {
      Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to delete this coupon?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/deleteCoupon?id=${couponId}`, {
            method: 'DELETE'
          })
          .then(response => response.json() )
          .then(data => {
            if (data.success) {
              Swal.fire({
                title: ' Deleted!',
                html: '<p>Coupon has been deleted.</p>',
                icon: 'success',
                timer: 1500,
                showConfirmButton: false
                })
                .then(() => {
                window.location.reload();
              });
            } else {
              Swal.fire('Error', data.message, 'error');
            }
          })
          .catch(error => {
            console.error('Delete Error:', error);
            Swal.fire('Error', 'Failed to delete coupon', 'error');
          });
        }
      });
    }
    function handleCouponFormSubmit(event) {
      event.preventDefault();
      const form = event.target;
      const code = form.code.value.trim();
      const startDate = form["createdOn"].value;
      const expireDate = form["expireOn"].value;
      const offerPercentage = parseFloat(form["offerPercentage"].value);
      const minimumPrice = parseFloat(form["minimumPrice"].value);
      [
        "code",
        "start-date",
        "expire-date",
        "offer-percentage",
        "minimum-price",
      ].forEach((field) => {
        document.getElementById(`${field}-error`).innerText = "";
      });

      let isValid = true;

      const couponCode = /^(?!-)(?!.*--)[A-Z0-9-]{5,12}(?<!-)$/;

      if (!couponCode.test(code)) {
        document.getElementById("code-error").innerText =
          "Coupon code must be 5-12 characters, alphanumeric, and can include dashes.";
        isValid = false;
      }

      if (startDate === "") {
        document.getElementById("start-date-error").innerText =
          "Start date is required.";
        isValid = false;
      }

      if (expireDate === "") {
        document.getElementById("expire-date-error").innerText =
          "Expire date is required.";
        isValid = false;
      } else if (new Date(expireDate) <= new Date(startDate)) {
        document.getElementById("expire-date-error").innerText =
          "Expire date must be after start date.";
        isValid = false;
      }

      if (
        isNaN(offerPercentage) ||
        offerPercentage <= 0 ||
        offerPercentage > 100
      ) {
        document.getElementById("offer-percentage-error").innerText =
          "Offer percentage must be a number between 1 and 100.";
        isValid = false;
      }

      if (isNaN(minimumPrice) || minimumPrice <= 0) {
        document.getElementById("minimum-price-error").innerText =
          "Minimum price must be greater than 0.";
        isValid = false;
      }

      if (!isValid) return;

      const couponData = {
        code,
        createdOn: startDate,
        expireOn: expireDate,
        offerPercentage,
        minimumPrice,
      };

      fetch("/admin/addCoupon", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(couponData),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.success) {
            Swal.fire({
              title: "Success",
              text: "Coupon added successfully",
              icon: "success",
              timer: 2000,
              showConfirmButton: false,
            }).then(() => {
              const addCouponModal = document.getElementById("addCouponModal");
              const modalInstance = bootstrap.Modal.getInstance(addCouponModal);
              if (modalInstance) modalInstance.hide();
              setTimeout(() => window.location.reload(), 200);
            });
          } else {
            Swal.fire("Error", data.message, "error");
          }
        })
        .catch((error) => {
          console.error("Fetch Error:", error);
          Swal.fire("Error", "Failed to add coupon", "error");
        });
    }
    
  </script>
</body>
<%- include("../../views/partials/admin/footer") %>